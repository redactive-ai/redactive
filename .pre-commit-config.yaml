default_install_hook_types: [pre-commit, pre-push]
default_language_version:
  python: python3.12

fail_fast: true
# pre-commit hooks references: https://pre-commit.com/hooks.html
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.2.0
    hooks:
      # prevents giant files from being committed
      - id: check-added-large-files
      # checks for files that contain merge conflict strings
      - id: check-merge-conflict
      # detects the presence of private keys
      - id: detect-private-key

  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.27.0
    hooks:
      - id: commitizen
        name: Check commit message format

  - repo: local
    hooks:
      - id: prettier
        name: Check files format with prettier
        entry: bash -c 'prettier --write .'
        language: system

  # Python SDK hooks
  - repo: local
    hooks:
      # Run Python SDK gRpc codegen
      - id: python-sdk-grpc-codegen
        stages: ["pre-commit"]
        name: Generate gRpc python code
        language: python
        entry: bash -c 'sdks/codegen/python_sdk.sh && cd sdks/python && hatch fmt'
        additional_dependencies:
          ["hatch", "grpcio-tools", "betterproto[compiler]==2.0.0b6"]
        pass_filenames: false
        fail_fast: false
        files: ^protos/

      # Run type checking
      - id: python-sdk-pyright
        name: Check typing with pyright
        language: python
        types: [python]
        # Custom command for monorepo
        entry: bash -c 'cd sdks/python && hatch run types:check'
        # Important config for monorepo
        pass_filenames: false
        additional_dependencies: ["hatch"]
        files: ^sdks/python/

      # Run the formatter
      - id: python-sdk-ruff-format
        name: Format Redactive Python SDK codebase with ruff
        language: python
        types: [python]
        # Custom command for monorepo
        entry: bash -c 'cd sdks/python && hatch fmt'
        # Important config for monorepo
        pass_filenames: false
        additional_dependencies: ["hatch"]
        files: ^sdks/python/

      # Run unit tests
      - id: python-sdk-unit-tests
        name: Run Python SDK unit tests
        language: python
        types: [python]
        # Custom command for monorepo
        entry: bash -c 'cd sdks/python && hatch test'
        additional_dependencies: ["hatch"]
        # Important config for monorepo
        pass_filenames: false
        files: ^sdks/python/
  # Node SDK hooks
  - repo: local
    hooks:
      # Run Node SDK gRpc codegen
      - id: node-sdk-grpc-codegen
        stages: ["pre-commit"]
        name: Generate gRpc Nodejs code
        language: node
        entry: bash -c 'sdks/codegen/node_sdk.sh && cd sdks/node && pnpm lint:fix && pnpm format:fix'
        additional_dependencies: ["ts-proto", "pnpm"]
        pass_filenames: false
        fail_fast: false
        files: ^protos/
      # Run Node SDK linting
      - id: node-sdk-linting
        name: Lint Node SDK codebase
        language: node
        entry: bash -c 'cd sdks/node && pnpm lint:fix'
        additional_dependencies: ["pnpm"]
        pass_filenames: false
        fail_fast: false
        files: ^sdks/node/
      # Run Node SDK formatting
      - id: node-sdk-formatting
        name: Format Node SDK codebase
        language: node
        entry: bash -c 'cd sdks/node && pnpm format:fix'
        additional_dependencies: ["pnpm"]
        pass_filenames: false
        fail_fast: false
        files: ^sdks/node/
      # Run Node SDK testing
      - id: node-sdk-testing
        name: Test Node SDK
        language: node
        entry: bash -c 'cd sdks/node && pnpm test'
        additional_dependencies: ["pnpm"]
        pass_filenames: false
        fail_fast: false
        files: ^sdks/node/
